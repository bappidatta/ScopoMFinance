@model ScopoMFinance.Domain.ViewModels.Policy.BranchEditViewModel

@{
    ViewBag.Title = "Branch Setup";
}

<nav class="nav-breadcrumb">
    <div class="nav-wrapper blue-grey darken-3">
        <div class="row">
            <div class="col s8">
                @Html.ActionLink("Dashboard", "Index", new { area = "Dashboard", controller = "SuperUser" }, new { @class = "breadcrumb" })
                @Html.ActionLink("Branch List", "Index", new { area = "HO", controller = "Branch" }, new { @class = "breadcrumb" })
                <a class="breadcrumb" href="javascript:void(0);">Edit Branch</a>
            </div>
            <div class="col s4">
                @{Html.RenderPartial("_UserInfo");}
            </div>
        </div>
    </div>
</nav>

<div class="row">
    <div class="col s12">
        <div class="card">
            <div class="card-content">
                <span class="card-title">Edit Branch</span>
                <div class="row">
                    @using (Html.BeginForm("Edit", "Branch", new { area = "HO" }, FormMethod.Post, new { @class = "col s12" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "header center red-text text-darken-1" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="row">
                            <div class="input-field col s6">
                                @Html.TextBoxFor(m => m.Name, new { @class = "" })
                                @Html.LabelFor(m => m.Name)
                                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "red-text text-darken-1", @data_error = "wrong", @data_success = "right" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="input-field col s6">
                                @Html.TextBoxFor(m => m.OpenDate, new { @class = "datepicker", @type = "date" })
                                @Html.LabelFor(m => m.OpenDate)
                                @Html.ValidationMessageFor(m => m.OpenDate, "", new { @class = "red-text text-darken-1", @data_error = "wrong", @data_success = "right" })
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col s3">
                                <p>
                                    <input class="filled-in" data-val="true" data-val-required="The Head Office field is required." id="IsHeadOffice" name="IsHeadOffice" type="checkbox" value="true">
                                    @Html.LabelFor(m => m.IsHeadOffice)
                                </p>
                            </div>

                            <div class="col s3">
                                <p>
                                    <input class="filled-in" data-val="true" data-val-required="The Status field is required." id="Status" name="Status" type="checkbox" value="true" checked>
                                    @Html.LabelFor(m => m.Status)
                                </p>
                            </div>
                        </div>

                        <input name="IsHeadOffice" type="hidden" value="false">
                        <input name="Status" type="hidden" value="false">

                        <div class="row">
                            <div class="col s12">
                                <input type="submit" value="Save" class="waves-effect waves-light btn right" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}